@model ExpenseTracker.Models.CreateCustomBudgetViewModel

@{
    ViewBag.Title = "Update Budget";
}

<h2>Update Budget</h2>

@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.LabelFor(model => model.MonthlyIncome)
        @Html.TextBoxFor(model => model.MonthlyIncome, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MonthlyIncome)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate)
        @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.StartDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate)
        @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EndDate)
    </div>

    <h4>Budget Categories</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Category</th>
                <th>Allocation Percentage</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Categories.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Categories[i].Category)
                        @Model.Categories[i].Category
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Categories[i].AllocatedPercentage, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Categories[i].AllocatedPercentage)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Update Budget</button>
}